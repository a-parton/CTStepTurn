% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sim_markov.R
\name{sim_markov_bridge}
\alias{sim_markov_bridge}
\title{Simulate Markov chain bridge.}
\usage{
sim_markov_bridge(num_states, fixed_values, behav_params)
}
\arguments{
\item{num_states}{Numeric, number of (behavioural) states in the Markov chain.}

\item{fixed_values}{List with components:
\describe{
\item{\code{inc_times}}{Vector of length two, start and end times of the simulation.}
\item{\code{inc_behavs}}{Vector of length two, start and end known values (behaviours) of the simulation.}
}}

\item{behav_params}{List with components:
\describe{
\item{\code{lambda}}{Vector of length \code{num_states}, switching rates out of each state.}
\item{\code{q}}{Sqaure matrix size \code{num_states}, probability of switching from (row) each state to (column) another. Diagonal elements are NA.}
}}
}
\value{
List with the components:
  \describe{
  \item{\code{accept}}{Binary element that the rejection simulation has been accepted/rejected. If rejected, this is the only return value.}
  \item{\code{times}}{Vector, switching times of the simulation. Includes the fixed end points.}
  \item{\code{states}}{Vector, states at switching times of the simulation. Includes the fixed end points.}
  }
}
\description{
\code{sim_markov_bridge} returns a simulated realisation of a Markov chain between two known values and times.
}
\details{
Simulation is by rejection. Markov chain simulated forwards in time from the starting point, and then compared with the
  known end point. If the end point is correct, the simulation is accepted, otherwise it is rejected.
}
\examples{
end_points <- list(inc_times = c(0,10),
                   inc_behavs = c(1,3))
param <- list(lambda = c(0.1,0.2,0.3),
              q = matrix(c(NA,0.5,0.3,0.35,NA,0.7,0.65,0.5,NA),nrow=3))

set.seed(123) # simulation does not meet correct end point and is rejected
sim_markov_bridge(3, end_points, param)
# $accept
# [1] FALSE

set.seed(2712) # simultion is accepted
sim_markov_bridge(3, end_points, param)
# $accept
# [1] TRUE
#
# $times
# [1]  0.000000  5.694254  6.831134  7.503054 10.000000
#
# $states
# [1] 1 3 1 3 3
}
\seealso{
Other Markov chain simulations: \code{\link{calc_markov_steady_state}},
  \code{\link{sim_markov_backward}},
  \code{\link{sim_markov_forward}}
}
\concept{Markov chain simulations}
